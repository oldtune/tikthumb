@{
ViewData["Title"] = "Home";
}

@section Styling {
<link rel="stylesheet" href="~/css/homepage.css" asp-append-version="true" />
}

<div class="container">
	<div class="row h-100">
		<div class="row text-center mb-5">
			<div class="left-side-logo">Tikthumb</div>
			<div class="left-side-description">
				<p>Tiktok won't allow custom thumbnail (Cover) when you post video.</p>
				<p>So we insert custom thumbnail into the video for you.</p>
			</div>
		</div>

		<div
			class="col-12 col-lg-6 d-flex flex-column flex-wrap justify-content-center align-items-left left-side left-side-logo-wrapper">
			<div class="d-flex flex-column flex-wrap">
				<h4>Here come the Instructions!</h4>
			</div>
			<div class="instruction-wrapper flex-wrap d-flex flex-column">
				<div class="instruction-step d-flex flex-row align-items-center">
					<div class="step-description"><img class="step-image" src="~/rickroll.jpg" /></div>
					<div class="step-number">
						1. Select the video (Suppose our video is 'Rick Roll')
					</div>
				</div>
				<div class="instruction-step d-flex flex-row align-items-center">
					<div class="step-description"><img class="step-image" src="https://i.imgur.com/Eo6iSkW.jpeg" />
					</div>
					<div class="step-number">
						2. Select the Thumbnail (We want Tom and Jerry to be the thumbnail)
					</div>
				</div>
				<div class="instruction-step d-flex flex-row align-items-center">
					<div class="step-description">
						<div class="step-image step-image-text">③ Submit</div>
					</div>
					<div class="step-number">
						3. Clicking the 'Submit' button. We will do the work and return the output video
					</div>
				</div>
				<div class="instruction-step d-flex flex-row align-items-center">
					<div class="step-description"><img class="step-image" src="~/output.png" /></div>
					<div class="step-number">
						4. Upload the downloaded video to TikTok (Tom & Jerry fans will be Rick Rolled 😹). Now It's
						easier for you to manage the videos and also for viewer to find it.
					</div>
				</div>
			</div>
		</div>

		<div
			class="col-12 col-lg-6 justify-content-center d-flex justify-content-center align-items-center flex-column flex-nowrap">
			<div class="w-100 pb-5 try-here">
				<span class="display-3">Try here</span>
				<span
					class="material-symbols-outlined display-3 animate__infinite animate__slower animate__animated animate__shakeY">
					arrow_downward
				</span>
			</div>
			<div class="form-wrapper-background-wrapper w-100">
				<div class="form-wrapper d-flex flex-column justify-content-center align-items-center text-dark">
					<form enctype="multipart/form-data" method="post" class="p-5" id="form">
						<div class="form-group row mb-2">
							<label class="form-label">1. Choose your video file</label>
							<input required name="videoFile" accept=".mp4,.mov,.avi,.wmv,.webm,.flv,.mkv,.amv"
								type="file" id="videoFile" class="form-control" />
						</div>
						<div class="form-group row mb-3">
							<label class="form-label">2. Choose the thumbnail image</label>
							<input required name="thumbnailFile" accept=".jpeg,.png,.tiff,.raw,.jpg, .webp,.bmp"
								type="file" id="thumbnailFile" class="form-control" />
						</div>
						<div class="form-group row submit-button-wrapper submit-button-wrapper__disabled"
							id="submit-button-wrapper" title="Will be selected when Video and Thumbnail are selected">
							<button disabled="true" class="btn btn-primary" id="submit-btn" type="submit">3.
								Submit</button>
						</div>
					</form>
				</div>
			</div>
		</div>
	</div>
</div>
<div class="container margin-block">
	<div id="accordion" class="accordion">
		<div class="accordion-item mb-3">
			<div class="accordion-header" id="tikthumb-definition-header">
				<h2 class="primary-header-text-color">
					<button class="accordion-button primary-header-text-color" type="button" data-bs-toggle="collapse"
						data-bs-target="#tikthumb-definition-collapse" aria-expanded="false"
						aria-controls="tikthumb-definition-collapse">
						What is tikthumb and why do we
						need it?
					</button>
				</h2>
			</div>

			<div id="tikthumb-definition-collapse" class="accordion-collapse collapse"
				aria-labelledby="tikthumb-definition-header" data-bs-parent="#accordion">
				<div class="card-body">
					<div class="row mb-3">
						<div class="col-12 col-lg-6 justify-content-center align-items-center d-flex">
							<p>
								Take a look at this sample profile. I made a search on Tiktok using keyword "Roblox",
								Can
								you
								tell
								what these
								videos are all about without looking at the long trimmed title?
							</p>
						</div>
						<div class="col-12 col-lg-6 justify-content-center align-items-center d-flex">
							<img src="~/roblox.png" class="faq-image" />
						</div>
					</div>
					<div class="row mb-2 mobile-reverse">
						<div class="col-12 col-lg-6 justify-content-center align-items-center">
							<img src="~/tiktokexample.png" class="faq-image" />
						</div>
						<div class="col-12 col-lg-6 justify-content-center align-items-center d-flex">
							<p>
								Or say, you are looking at someone's profile and want to find a funny meme that you saw
								earlier but
								then
								you see this. How can you find that and share it to your friend?
							</p>
						</div>
					</div>
					<div class="row">
						<p class="col">With Tikthumb, You get the friendly cover of the video. This way, not only the
							owner
							find it
							easier to manage their list, but also the viewer find it easier to search some video that
							they
							watched
							ealier. Your video show on Search results will standout because it's direct to the point</p>
					</div>
				</div>
			</div>
		</div>
		<div class="accordion-item">
			<div class="accordion-header" id="faq-header">
				<h2 class="primary-header-text-color"><button class="accordion-button primary-header-text-color"
						type="button" data-bs-toggle="collapse" data-bs-target="#faq-collapse" aria-expanded="false"
						aria-controls="faq-collapse">FAQ</button></h2>
			</div>
			<div id="faq-collapse" class="accordion-collapse collapse" aria-labelledby="faq-header"
				data-bs-parent="#accordion">
				<div class="accordion-body">
					<div class="row text-left">
						<h3>1. Does this violate any rules and policies of Tiktok?</h3>
						<p>No, we still follow their policy, the cover is still considered the content of the video. We
							did
							nothing
							illegal
							here.</p>
						<h3>2. What are the benefits of having a thumbnail?</h3>
						<p>Having a thumbnail makes your profile looks professsional. It's not only easier for you to
							manage
							your
							videos but for others to find them. When your video is shown on search results, it should
							stand
							out
							and be clear because viewers can find what they want by simply looking at the thumbnail
							instead of
							the
							long and small title.</p>
						<h3>3. What is the recommend thumbnail resolution for videos?</h3>
						<p>Your thumbnail should have the same resolution as your video. Don't worry if they don't have
							the same
							size, we will resize the thumbnail for compatibility with your video.</p>
						<h3>4. What is the recommend video format?</h3>
						<p>We recommend using the .mp4 file format. However, other well-known formats should work as
							well.</p>
						<h3>5. What is the recommend image format?</h3>
						<p>We recommend using the .jpg, .png, or .jpeg formats. However, other formats should work as
							well.</p>
					</div>
				</div>
			</div>
		</div>
	</div>

	@section Scripts {

	<script type="text/javascript">
		const state = {
			stepIndex: 0,
			uiUpdate: null,
			transferToNextStep: null
		}

		const component = {};

		const videoInput = document.getElementById("videoFile");
		const thumbnailFile = document.getElementById("thumbnailFile");
		const submitButtonWrapper = document.getElementById("submit-button-wrapper");
		const submitButton = document.getElementById("submit-btn");
		const form = document.getElementById("form");

		function setSubmitButtonState(enable) {
			if (enable) {
				const className = submitButtonWrapper.className;
				const newClassName = className.replace(" submit-button-wrapper__disabled", "");

				submitButtonWrapper.className = newClassName;
				submitButtonWrapper.setAttribute('title', '');
			}
			else {
				if (!submitButtonWrapper.className.includes("submit-button-wrapper__disabled")) {
					submitButtonWrapper.className = `${submitButtonWrapper.className} submit-button-wrapper__disabled`;
				}
				submitButtonWrapper.setAttribute('title', 'Will be enabled when Video and Thumbnail are selected!');
			}

			submitButton.disabled = !enable;
		}

		function formValid() {
			return videoInput.value && thumbnailFile.value;
		}

		window.onload = () => {

			videoInput.onchange = () => {
				console.log('video file changed!');

				setSubmitButtonState(formValid());
			};

			thumbnailFile.onchange = () => {
				console.log('thumbnail file changed!');

				setSubmitButtonState(formValid());
			};

			submitButton.onclick = () => {
			};
		};
	</script>
	}
